// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.1.3 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
// swift-module-flags: -target i386-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ChatSDK
import ChatProvidersSDK
@_exported import ChatSDK
import Foundation
import MessagingAPI
import SDKConfigurations
import Swift
import UIKit
@objc(ZDKChatEngine) final public class ChatEngine : ObjectiveC.NSObject, MessagingAPI.Engine, ChatProvidersSDK.Loggable {
  @objc final public let id: Swift.String
  final public let transferOptionDescription: MessagingAPI.TransferOptionDescription
  final public let configs: SDKConfigurations.Configurations
  @objc final public var configurations: [SDKConfigurations.Configuration] {
    @objc get
  }
  final public var onUpdate: ([Foundation.UUID : (MessagingAPI.Update) -> Swift.Void])
  @objc deinit
  @objc final public func isConversationOngoing() -> Swift.Bool
  @objc public static func engine() throws -> ChatSDK.ChatEngine
  final public func start(messagingAPI: MessagingAPI.MessagingAPIProtocol)
  final public func stop()
  final public func onEvent(_ event: MessagingAPI.Event)
  @objc override dynamic public init()
}
extension ChatEngine : MessagingAPI.Observable {
  final public func observeUpdates(_ completion: @escaping (MessagingAPI.Update) -> Swift.Void) -> MessagingAPI.ObservationToken
  public typealias Observable = MessagingAPI.Update
}
